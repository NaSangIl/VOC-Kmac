<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kmac.statistics.mapper.StatisticsMapper">

    <!-- 기간별 VOC 현황 조회 -->
    <select id="getVocStatusByPeriod" resultType="kr.co.kmac.statistics.dto.StatisticsDto$Info">
        WITH TT AS
            (SELECT T1.periodType
                  , COUNT(voc_seq) AS "totalCnt"
                  , SUM(T1.complaintCnt) AS complaintCnt
                  , SUM(T1.complimentCnt) AS complimentCnt
                  , SUM(T1.suggestionCnt) AS suggestionCnt
                  , SUM(T1.inquiryCnt) AS inquiryCnt
            FROM
                (SELECT 
                  <if test='"Y".equals(periodType)'>      
                        DATE_FORMAT(A.reg_dt, '%Y') AS "periodType"
				  </if>                        
                  <if test='"M".equals(periodType)'>      
                        DATE_FORMAT(A.reg_dt, '%Y년%m월') AS "periodType"
				  </if>                        
                  <if test='"D".equals(periodType)'>      
                        DATE_FORMAT(A.reg_dt, '%Y-%m-%d') AS "periodType"
				  </if>                        
                      , A.voc_seq,
                    CASE A.voc_case_cd WHEN '01' THEN 1 ELSE 0 END AS "complaintCnt",
                    CASE A.voc_case_cd WHEN '02' THEN 1 ELSE 0 END AS "complimentCnt",
                    CASE A.voc_case_cd WHEN '03' THEN 1 ELSE 0 END AS "suggestionCnt",
                    CASE A.voc_case_cd WHEN '04' THEN 1 ELSE 0 END AS "inquiryCnt"
                FROM tb_voc_mst A
               WHERE 1=1
                 AND DEL_YN = 'N'
                
                <!-- 년도별 -->
                <if test='"Y".equals(periodType)'>
					<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= date_add(#{regDtStart}, interval -2 YEAR) </if>
                	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>	
				</if>
                
                <!-- 월별 -->
                <if test='"M".equals(periodType)'>
					<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= date_add(#{regDtStart}, interval -11 MONTH) </if>
                	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>	
				</if>     
				           
                <!-- 일별 -->
                <if test='"D".equals(periodType)'>
					<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= ADDDATE(#{regDtStart},-1) </if>
                	<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>	
				</if>  				           
				
                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(companyCd)">AND A.company_cd = #{companyCd} </if>
                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">AND A.voc_type_cd1 = #{vocTypeCd1} </if>
                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">AND A.voc_type_cd2 = #{vocTypeCd2} </if>
                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">AND A.voc_type_cd3 = #{vocTypeCd3} </if>
                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">AND A.rcpt_chnn_cd = #{rcptChnnCd} </if>
            ) T1
            GROUP BY T1.periodType
        )
        
        SELECT periodType
             , totalCnt
			 , CASE WHEN totalYoyCnt > 0
			        THEN ( ( totalCnt - totalYoyCnt ) / totalYoyCnt ) * 100
			 		WHEN totalCnt > 0
			 		THEN 100
			 		ELSE 0
			   END AS "totalYoyCnt"	              
             , complaintCnt
			 , CASE WHEN totalCnt > 0
			        THEN (complaintCnt/totalCnt) * 100 
			        ELSE 0
			   END AS "complaintRate"
			   
			 , CASE WHEN complaintYoyCnt > 0
			        THEN ( ( complaintCnt - complaintYoyCnt ) / complaintYoyCnt ) * 100
			 		WHEN complaintCnt > 0
			 		THEN 100
			 		ELSE 0
			   END AS "complaintYoyCnt"	 
			                
             , complimentCnt
			 , CASE WHEN totalCnt > 0
			        THEN (complimentCnt/totalCnt) * 100 
			        ELSE 0
			   END AS "complimentRate"
			 , CASE WHEN complimentYoyCnt > 0
			        THEN ( ( complimentCnt - complimentYoyCnt ) / complimentYoyCnt ) * 100
			 		WHEN complimentCnt > 0
			 		THEN 100
			 		ELSE 0
			   END AS "complimentYoyCnt"	 
			                
             , suggestionCnt
			 , CASE WHEN totalCnt > 0
			        THEN (suggestionCnt/totalCnt) * 100 
			        ELSE 0
			   END AS "suggestionRate"
			 , CASE WHEN suggestionYoyCnt > 0
			        THEN ( ( suggestionCnt - suggestionYoyCnt ) / suggestionYoyCnt ) * 100
			 		WHEN suggestionCnt > 0
			 		THEN 100
			 		ELSE 0
			   END AS "suggestionYoyCnt"	       
			          
             , inquiryCnt
			 , CASE WHEN totalCnt > 0
			        THEN (inquiryCnt/totalCnt) * 100 
			        ELSE 0
			   END AS "inquiryRate"
			 , CASE WHEN inquiryYoyCnt > 0
			        THEN ( ( inquiryCnt - inquiryYoyCnt ) / inquiryYoyCnt ) * 100
			 		WHEN inquiryCnt > 0
			 		THEN 100
			 		ELSE 0
			   END AS "inquiryYoyCnt"	                 
             
          FROM (
          
		         SELECT periodType
			          , totalCnt
			          , complaintCnt
			          , complimentCnt
			          , suggestionCnt
			          , inquiryCnt
		              , LAG(totalCnt,1) OVER(ORDER BY periodType) AS "totalYoyCnt"
		              , LAG(complaintCnt,1) OVER(ORDER BY periodType) AS "complaintYoyCnt"
		              , LAG(complimentCnt,1) OVER(ORDER BY periodType) AS "complimentYoyCnt"
		              , LAG(suggestionCnt,1) OVER(ORDER BY periodType) AS "suggestionYoyCnt"
		              , LAG(inquiryCnt,1) OVER(ORDER BY periodType) AS "inquiryYoyCnt"
		           FROM TT
		        ) A
		    
<!--           
	   union all
		 select '합계' AS periodType
		      , SUM(totalCnt)
		      , SUM(complaintCnt)
		      , SUM(complimentCnt)
		      , SUM(suggestionCnt)
		      , SUM(inquiryCnt)
		      , SUM(totalYoyCnt)
		      , SUM(complaintYoyCnt)
		      , SUM(complimentYoyCnt)
		      , SUM(suggestionYoyCnt)
		      , SUM(inquiryYoyCnt)
		      , ROUND(AVG(complaintRate),1)
		      , ROUND(AVG(complimentRate),1)
		      , ROUND(AVG(suggestionRate),1)
		      , ROUND(AVG(inquiryRate),1)
		  from (	  
		 	 SELECT periodType
			      , totalCnt
			      , complaintCnt
			      , complimentCnt
			      , suggestionCnt
			      , inquiryCnt
			      , totalCnt - LAG(totalCnt,1) OVER(ORDER BY periodType) AS "totalYoyCnt"
			      , complaintCnt - LAG(complaintCnt,1) OVER(ORDER BY periodType) AS "complaintYoyCnt"
			      , complimentCnt - LAG(complimentCnt,1) OVER(ORDER BY periodType) AS "complimentYoyCnt"
			      , suggestionCnt - LAG(suggestionCnt,1) OVER(ORDER BY periodType) AS "suggestionYoyCnt"
			      , inquiryCnt - LAG(inquiryCnt,1) OVER(ORDER BY periodType) AS "inquiryYoyCnt"
			      , round(complaintCnt/totalCnt,1)  AS "complaintRate"
			      , round(complimentCnt/totalCnt,1)  AS "complimentRate"
			      , round(suggestionCnt/totalCnt,1)  AS "suggestionRate"
			      , round(inquiryCnt/totalCnt,1)  AS "inquiryRate"
			   FROM TT
			  ) A           
-->           
    </select>

    <!-- 유형별 VOC 현황 조회 -->
    <select id="getVocStatusByVoctype" resultType="kr.co.kmac.statistics.dto.StatisticsDto$Info">
		
			SELECT A.LEV1_CUSTOM_CD 	AS "vocTypeCd1"
				 , A.LEV1_CUSTOM_NM 	AS "vocTypeNm1"
				 <if test='"Y".equals(vocTypeCd2Yn)'>    
				 , A.LEV2_CUSTOM_CD		AS "vocTypeCd2"
				 , A.LEV2_CUSTOM_NM 	AS "vocTypeNm2"
				 </if>
				 <if test='"Y".equals(vocTypeCd3Yn)'>    
				 , A.LEV3_CUSTOM_CD		AS "vocTypeCd3"
				 , A.LEV3_CUSTOM_NM		AS "vocTypeNm3"
				 </if> 
				 , A.NOW_ALL_CNT   AS "totalCnt"
				 , CASE WHEN A.BF_ALL_CNT > 0
				        THEN ( ( A.NOW_ALL_CNT - A.BF_ALL_CNT ) / A.BF_ALL_CNT ) * 100
				 		WHEN A.NOW_ALL_CNT > 0
				 		THEN 100
				 		ELSE 0
				   END AS "totalYoyCnt"
				   <!-- 불만 -->	
				 , A.NOW_01_CNT AS "complaintCnt"
				 , CASE WHEN NOW_ALL_CNT > 0
				        THEN (NOW_01_CNT/NOW_ALL_CNT) * 100 
				        ELSE 0
				   END AS "complaintRate"
				 , CASE WHEN BF_01_CNT > 0
				        THEN ( ( NOW_01_CNT - BF_01_CNT ) / BF_01_CNT ) * 100
				 		WHEN NOW_01_CNT > 0
				 		THEN 100
				 		ELSE 0
				   END AS "complaintYoyCnt"	
				   <!-- 칭찬 -->
				 , A.NOW_02_CNT AS "complimentCnt"
				 , CASE WHEN NOW_ALL_CNT > 0
				        THEN (NOW_02_CNT/NOW_ALL_CNT) * 100 
				        ELSE 0
				   END AS "complimentRate"
				 , CASE WHEN BF_02_CNT > 0
				        THEN ( ( NOW_02_CNT - BF_02_CNT ) / BF_02_CNT ) * 100
				 		WHEN NOW_02_CNT > 0
				 		THEN 100
				 		ELSE 0
				   END AS "complimentYoyCnt"	   
				   <!-- 제안 -->				  
				 , A.NOW_03_CNT AS "suggestionCnt"   
				 , CASE WHEN NOW_ALL_CNT > 0
				        THEN (NOW_03_CNT/NOW_ALL_CNT) * 100 
				        ELSE 0
				   END AS "suggestionRate"
				 , CASE WHEN BF_03_CNT > 0
				        THEN ( ( NOW_03_CNT - BF_03_CNT ) / BF_03_CNT ) * 100
				 		WHEN NOW_03_CNT > 0
				 		THEN 100
				 		ELSE 0
				   END AS "suggestionYoyCnt"	   
				   <!-- 문의 -->
				 , A.NOW_04_CNT AS "inquiryCnt"  
				 , CASE WHEN NOW_ALL_CNT > 0
				        THEN (NOW_04_CNT/NOW_ALL_CNT) * 100 
				        ELSE 0
				   END AS "inquiryRate"
				 , CASE WHEN BF_04_CNT > 0
				        THEN ( ( NOW_04_CNT - BF_04_CNT ) / BF_04_CNT ) * 100
				 		WHEN NOW_04_CNT > 0
				 		THEN 100
				 		ELSE 0
				   END AS "inquiryYoyCnt"		   
			  FROM (
					SELECT A.LEV1_CUSTOM_CD
						 , A.LEV1_CUSTOM_NM
					     <if test="@org.apache.commons.lang3.ObjectUtils@isEmpty(vocTypeCd2Yn) and @org.apache.commons.lang3.ObjectUtils@isEmpty(vocTypeCd3Yn)">
						 , COUNT(B.VOC_TYPE_CD1) AS NOW_ALL_CNT
						 , COUNT(C.VOC_TYPE_CD1) AS BF_ALL_CNT		 
						 </if>
						 <if test='"Y".equals(vocTypeCd2Yn)'>
						     <if test="@org.apache.commons.lang3.ObjectUtils@isEmpty(vocTypeCd3Yn)">
								 , A.LEV2_CUSTOM_CD
								 , A.LEV2_CUSTOM_NM
								 , COUNT(B.VOC_TYPE_CD2) AS NOW_ALL_CNT
						 		 , COUNT(C.VOC_TYPE_CD2) AS BF_ALL_CNT
							 </if>
						 
						 	 <if test='"Y".equals(vocTypeCd3Yn)'>
								 , A.LEV2_CUSTOM_CD
								 , A.LEV2_CUSTOM_NM
								 , A.LEV3_CUSTOM_CD
								 , A.LEV3_CUSTOM_NM
								 , COUNT(B.VOC_TYPE_CD3) AS NOW_ALL_CNT
						 		 , COUNT(C.VOC_TYPE_CD3) AS BF_ALL_CNT
							 </if>
						 </if>
						 , CASE WHEN B.VOC_CASE_CD = '01' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS NOW_01_CNT
						 , CASE WHEN C.VOC_CASE_CD = '01' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS BF_01_CNT
						 , CASE WHEN B.VOC_CASE_CD = '02' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS NOW_02_CNT
						 , CASE WHEN C.VOC_CASE_CD = '02' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS BF_02_CNT
						 , CASE WHEN B.VOC_CASE_CD = '03' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS NOW_03_CNT
						 , CASE WHEN C.VOC_CASE_CD = '03' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS BF_03_CNT
						 , CASE WHEN B.VOC_CASE_CD = '04' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS NOW_04_CNT
						 , CASE WHEN C.VOC_CASE_CD = '04' 
						        THEN SUM(1) 
						        ELSE 0 
						   END AS BF_04_CNT
					  FROM (
							SELECT LEV1.CUSTOM_CD AS "LEV1_CUSTOM_CD"
							     , LEV1.CUSTOM_NM AS "LEV1_CUSTOM_NM"
							     <if test='"Y".equals(vocTypeCd2Yn)'>   
							     , LEV2.CUSTOM_CD AS "LEV2_CUSTOM_CD"
							     , LEV2.CUSTOM_NM AS "LEV2_CUSTOM_NM"
							     </if>
							     <if test='"Y".equals(vocTypeCd3Yn)'>   
							     , LEV3.CUSTOM_CD AS "LEV3_CUSTOM_CD"
							     , LEV3.CUSTOM_NM AS "LEV3_CUSTOM_NM"
							     </if>
							  FROM (
									SELECT A.CUSTOM_CD 
								         , A.CUSTOM_NM
								         , A.CUSTOM_LEVEL
								         , A.UPPER_CUSTOM_CD 
								         , A.DISP_ORDER
									  FROM TB_COMPANY_CUSTOM_CODE A
									       INNER JOIN TB_COMPANY B
									               ON A.COMPANY_SEQ = B.COMPANY_SEQ
									              AND B.COMPANY_CD = #{companyCd}
									 WHERE 1=1
									   AND A.USE_YN = 'Y'
									   AND A.CUSTOM_TYPE = 'VOC_TYPE'
									   AND A.CUSTOM_LEVEL = 1
									) LEV1
									<if test='"Y".equals(vocTypeCd2Yn)'>    
									LEFT OUTER JOIN (
														SELECT A.CUSTOM_CD 
													         , A.CUSTOM_NM
													         , A.CUSTOM_LEVEL
													         , A.UPPER_CUSTOM_CD 
													         , A.DISP_ORDER
														  FROM TB_COMPANY_CUSTOM_CODE A
														       INNER JOIN TB_COMPANY B
														               ON A.COMPANY_SEQ = B.COMPANY_SEQ
														              AND B.COMPANY_CD = #{companyCd}
														 WHERE 1=1
														   AND A.USE_YN = 'Y'
														   AND A.CUSTOM_TYPE = 'VOC_TYPE'
														   AND A.CUSTOM_LEVEL = 2
													 ) LEV2
												 ON LEV1.CUSTOM_CD = LEV2.UPPER_CUSTOM_CD
									</if>
									<if test='"Y".equals(vocTypeCd3Yn)'>    			 
									LEFT OUTER JOIN (
														SELECT A.CUSTOM_CD 
													         , A.CUSTOM_NM
													         , A.CUSTOM_LEVEL
													         , A.UPPER_CUSTOM_CD 
													         , A.DISP_ORDER
														  FROM TB_COMPANY_CUSTOM_CODE A
														       INNER JOIN TB_COMPANY B
														               ON A.COMPANY_SEQ = B.COMPANY_SEQ
														              AND B.COMPANY_CD = #{companyCd}
														 WHERE 1=1
														   AND A.USE_YN = 'Y'
														   AND A.CUSTOM_TYPE = 'VOC_TYPE'
														   AND A.CUSTOM_LEVEL = 3
													 ) LEV3
												 ON LEV2.CUSTOM_CD = LEV3.UPPER_CUSTOM_CD
									</if>
							WHERE 1=1
							
							<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">
  						      AND LEV1.CUSTOM_CD = #{vocTypeCd1}
						    </if>
							<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">
  						      AND LEV2.CUSTOM_CD = #{vocTypeCd2}
						    </if>
							<if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">
  						      AND LEV3.CUSTOM_CD = #{vocTypeCd3}
						    </if>
						    
							ORDER BY LEV1.DISP_ORDER ASC
									<if test='"Y".equals(vocTypeCd2Yn)'>    
							       , LEV2.DISP_ORDER ASC
							       </if>
							       <if test='"Y".equals(vocTypeCd3Yn)'>    
							       , LEV3.DISP_ORDER ASC
							       </if>
							) A	
							LEFT OUTER JOIN TB_VOC_MST B
						                 ON A.LEV1_CUSTOM_CD = B.VOC_TYPE_CD1
									<if test='"Y".equals(vocTypeCd2Yn)'>      						                 
								        AND A.LEV2_CUSTOM_CD = B.VOC_TYPE_CD2
								    </if>
								    <if test='"Y".equals(vocTypeCd3Yn)'>    
						                AND A.LEV3_CUSTOM_CD = B.VOC_TYPE_CD3
                                    </if>						                
							            AND B.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
					                    AND B.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
					                    AND B.COMPANY_CD = #{companyCd}
					                    AND B.DEL_YN = 'N'
					                    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
					                    AND B.RCPT_CHNN_CD = #{rcptChnnCd}
					                    </if>
					                    
							LEFT OUTER JOIN TB_VOC_MST C
							             ON A.LEV1_CUSTOM_CD = C.VOC_TYPE_CD1
							        <if test='"Y".equals(vocTypeCd2Yn)'>     
								        AND A.LEV2_CUSTOM_CD = C.VOC_TYPE_CD2
								    </if>    
								    <if test='"Y".equals(vocTypeCd3Yn)'>  
						                AND A.LEV3_CUSTOM_CD = C.VOC_TYPE_CD3
						            </if>    
							            AND C.REG_DT <![CDATA[ > ]]> ADDDATE(date_add(#{regDtStart}, interval -1 YEAR), -1)
					                    AND C.REG_DT <![CDATA[ < ]]> ADDDATE(date_add(#{regDtEnd}, interval -1 YEAR), 1)
					                    AND C.COMPANY_CD = #{companyCd}
					                    AND C.DEL_YN = 'N'
					                    <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
					                    AND C.RCPT_CHNN_CD = #{rcptChnnCd}
					                    </if>            
						GROUP BY A.LEV1_CUSTOM_CD
						       , A.LEV1_CUSTOM_NM
						     <if test='"Y".equals(vocTypeCd2Yn)'>       
						       , A.LEV2_CUSTOM_CD
						       , A.LEV2_CUSTOM_NM
						     </if>  
						     <if test='"Y".equals(vocTypeCd3Yn)'>    
						       , A.LEV3_CUSTOM_CD
						       , A.LEV3_CUSTOM_NM
						     </if>
					) A
    </select>

    <!-- 접수채널별 VOC 현황 조회 -->
    <select id="getVocStatusByChannel" resultType="kr.co.kmac.statistics.dto.StatisticsDto$Info">
		SELECT A.rcptChnnNm
		     , SUM(A.NOW_ALL_CNT)   AS "totalCnt"
		     , SUM(A.BF_ALL_CNT)
		     , CASE WHEN SUM(A.BF_ALL_CNT) > 0
		            THEN ( ( SUM(A.NOW_ALL_CNT) - SUM(A.BF_ALL_CNT) ) / SUM(A.BF_ALL_CNT) ) * 100
		            WHEN SUM(A.NOW_ALL_CNT) > 0
		            THEN 100
		            ELSE 0
		       END AS "totalYoyCnt"
		       /* 불만 */  
		     , SUM(A.NOW_01_CNT) AS "complaintCnt"
		     , CASE WHEN SUM(NOW_ALL_CNT) > 0
		            THEN (SUM(NOW_01_CNT)/SUM(NOW_ALL_CNT)) * 100 
		            ELSE 0
		       END AS "complaintRate"
		     , CASE WHEN SUM(BF_01_CNT) > 0
		            THEN ( ( SUM(NOW_01_CNT) - SUM(BF_01_CNT) ) / SUM(BF_01_CNT) ) * 100
		            WHEN SUM(NOW_01_CNT) > 0
		            THEN 100
		            ELSE 0
		       END AS "complaintYoyCnt" 
		       /* 칭찬 */
		     , SUM(A.NOW_02_CNT) AS "complimentCnt"
		     , CASE WHEN SUM(NOW_ALL_CNT) > 0
		            THEN (SUM(NOW_02_CNT)/SUM(NOW_ALL_CNT)) * 100 
		            ELSE 0
		       END AS "complimentRate"
		     , CASE WHEN SUM(BF_02_CNT) > 0
		            THEN ( ( SUM(NOW_02_CNT) - SUM(BF_02_CNT) ) / SUM(BF_02_CNT) ) * 100
		            WHEN SUM(NOW_02_CNT) > 0
		            THEN 100
		            ELSE 0
		       END AS "complimentYoyCnt"       
		       /* 제안 */                
		     , SUM(A.NOW_03_CNT) AS "suggestionCnt"   
		     , CASE WHEN SUM(NOW_ALL_CNT) > 0
		            THEN (SUM(NOW_03_CNT)/SUM(NOW_ALL_CNT)) * 100 
		            ELSE 0
		       END AS "suggestionRate"
		     , CASE WHEN SUM(BF_03_CNT) > 0
		            THEN ( ( SUM(NOW_03_CNT) - SUM(BF_03_CNT) ) / SUM(BF_03_CNT) ) * 100
		            WHEN SUM(NOW_03_CNT) > 0
		            THEN 100
		            ELSE 0
		       END AS "suggestionYoyCnt"       
		       /* 문의 */
		     , SUM(A.NOW_04_CNT) AS "inquiryCnt"  
		     , CASE WHEN SUM(NOW_ALL_CNT) > 0
		            THEN (SUM(NOW_04_CNT)/SUM(NOW_ALL_CNT)) * 100 
		            ELSE 0
		       END AS "inquiryRate"
		     , CASE WHEN SUM(BF_04_CNT) > 0
		            THEN ( ( SUM(NOW_04_CNT) - SUM(BF_04_CNT) ) / SUM(BF_04_CNT) ) * 100
		            WHEN SUM(NOW_04_CNT) > 0
		            THEN 100
		            ELSE 0
		       END AS "inquiryYoyCnt"   
		  FROM (        
		           SELECT A.RCPT_CHNN_CD    AS rcptChnnCd
		                , CD.CODE_NM        AS rcptChnnNm
		                , 1                 AS NOW_ALL_CNT
		                , (
		                    SELECT 1
		                      FROM TB_VOC_MST SUB
		                     WHERE DATEDIFF(SUB.REG_DT, ADDDATE(A.REG_DT,  interval -1 YEAR)) = 0 /* 작년 동월 동일 */
		                       AND SUB.RCPT_CHNN_CD = A.RCPT_CHNN_CD
		                       AND SUB.COMPANY_CD = #{companyCd}
		                       AND SUB.DEL_YN  = 'N'
		                  ) AS BF_ALL_CNT
		                , CASE WHEN A.VOC_CASE_CD = '01' 
		                       THEN 1
		                       ELSE 0 
		                  END AS NOW_01_CNT  
		                , (
		                    SELECT 1
		                      FROM TB_VOC_MST SUB
		                     WHERE DATEDIFF(SUB.REG_DT, ADDDATE(A.REG_DT,  interval -1 YEAR)) = 0 /* 작년 동월 동일 */
		                       AND SUB.RCPT_CHNN_CD = A.RCPT_CHNN_CD
		                       AND SUB.VOC_CASE_CD = '01'
		                       AND SUB.COMPANY_CD = #{companyCd}
		                       AND SUB.DEL_YN  = 'N'
		                  ) AS BF_01_CNT                  
		                , CASE WHEN A.VOC_CASE_CD = '02' 
		                       THEN 1
		                       ELSE 0 
		                  END AS NOW_02_CNT  
		                , (
		                    SELECT 1
		                      FROM TB_VOC_MST SUB
		                     WHERE DATEDIFF(SUB.REG_DT, ADDDATE(A.REG_DT,  interval -1 YEAR)) = 0 /* 작년 동월 동일 */
		                       AND SUB.RCPT_CHNN_CD = A.RCPT_CHNN_CD
		                       AND SUB.VOC_CASE_CD = '02'
		                       AND SUB.COMPANY_CD = #{companyCd}
		                       AND SUB.DEL_YN  = 'N'
		                  ) AS BF_02_CNT                  
		                , CASE WHEN A.VOC_CASE_CD = '03' 
		                       THEN 1
		                       ELSE 0 
		                  END AS NOW_03_CNT  
		                , (
		                    SELECT 1
		                      FROM TB_VOC_MST SUB
		                     WHERE DATEDIFF(SUB.REG_DT, ADDDATE(A.REG_DT,  interval -1 YEAR)) = 0 /* 작년 동월 동일 */
		                       AND SUB.RCPT_CHNN_CD = A.RCPT_CHNN_CD
		                       AND SUB.VOC_CASE_CD = '03'
		                       AND SUB.COMPANY_CD = #{companyCd}
		                       AND SUB.DEL_YN  = 'N'
		                  ) AS BF_03_CNT                  
		                , CASE WHEN A.VOC_CASE_CD = '04' 
		                       THEN 1
		                       ELSE 0 
		                  END AS NOW_04_CNT  
		                , (
		                    SELECT 1
		                      FROM TB_VOC_MST SUB
		                     WHERE DATEDIFF(SUB.REG_DT, ADDDATE(A.REG_DT,  interval -1 YEAR)) = 0 /* 작년 동월 동일 */
		                       AND SUB.RCPT_CHNN_CD = A.RCPT_CHNN_CD
		                       AND SUB.VOC_CASE_CD = '04'
		                       AND SUB.COMPANY_CD = #{companyCd}
		                       AND SUB.DEL_YN  = 'N'
		                  ) AS BF_04_CNT                  
		             FROM TB_VOC_MST A
		                  LEFT OUTER JOIN TB_SYS_CODE CD
		                               ON A.RCPT_CHNN_CD = CD.CODE
		                              AND CD.CODE_TYPE = 'RCPT_CHNN_CD'
		                              AND CD.USE_YN = 'Y'
		            WHERE 1=1
		              AND A.DEL_YN  = 'N'
		              AND A.COMPANY_CD = #{companyCd}
		              <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">
		              AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
		              </if>
		              <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">
		              AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
		              </if>
		              <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">AND A.voc_type_cd1 = #{vocTypeCd1} </if>
				      <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">AND A.voc_type_cd2 = #{vocTypeCd2} </if>
				      <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">AND A.voc_type_cd3 = #{vocTypeCd3} </if>
				      <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">AND A.rcpt_chnn_cd = #{rcptChnnCd} </if>     
		                 
		    ) A                
		GROUP BY A.rcptChnnNm        
    </select>

    <!-- 처리유형별 VOC 현황 조회 -->
    <select id="getVocStatusByActtype" resultType="kr.co.kmac.statistics.dto.StatisticsDto$Info">
            SELECT A.LEV1_CUSTOM_CD     AS "vocActTypeCd1"
                 , A.LEV1_CUSTOM_NM     AS "vocActTypeNm1"
                 <if test='"Y".equals(vocActTypeCd2Yn)'>    
                 , A.LEV2_CUSTOM_CD     AS "vocActTypeCd2"
                 , A.LEV2_CUSTOM_NM     AS "vocActTypeNm2"
                 </if>
                 , A.NOW_ALL_CNT   AS "totalCnt"
                 , CASE WHEN A.BF_ALL_CNT > 0
                        THEN ( ( A.NOW_ALL_CNT - A.BF_ALL_CNT ) / A.BF_ALL_CNT ) * 100
                        WHEN A.NOW_ALL_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "totalYoyCnt"
                   <!-- 불만 -->  
                 , A.NOW_01_CNT AS "complaintCnt"
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_01_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "complaintRate"
                 , CASE WHEN BF_01_CNT > 0
                        THEN ( ( NOW_01_CNT - BF_01_CNT ) / BF_01_CNT ) * 100
                        WHEN NOW_01_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "complaintYoyCnt" 
                   <!-- 칭찬 -->
                 , A.NOW_02_CNT AS "complimentCnt"
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_02_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "complimentRate"
                 , CASE WHEN BF_02_CNT > 0
                        THEN ( ( NOW_02_CNT - BF_02_CNT ) / BF_02_CNT ) * 100
                        WHEN NOW_02_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "complimentYoyCnt"       
                   <!-- 제안 -->                
                 , A.NOW_03_CNT AS "suggestionCnt"   
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_03_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "suggestionRate"
                 , CASE WHEN BF_03_CNT > 0
                        THEN ( ( NOW_03_CNT - BF_03_CNT ) / BF_03_CNT ) * 100
                        WHEN NOW_03_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "suggestionYoyCnt"       
                   <!-- 문의 -->
                 , A.NOW_04_CNT AS "inquiryCnt"  
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_04_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "inquiryRate"
                 , CASE WHEN BF_04_CNT > 0
                        THEN ( ( NOW_04_CNT - BF_04_CNT ) / BF_04_CNT ) * 100
                        WHEN NOW_04_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "inquiryYoyCnt"          
              FROM (
                    SELECT A.LEV1_CUSTOM_CD
                         , A.LEV1_CUSTOM_NM
                         <if test="@org.apache.commons.lang3.ObjectUtils@isEmpty(vocActTypeCd2Yn)">
                         , COUNT(B.VOC_ACT_TYPE_CD1) AS NOW_ALL_CNT
                         , COUNT(C.VOC_ACT_TYPE_CD1) AS BF_ALL_CNT       
                         </if>
                         <if test='"Y".equals(vocActTypeCd2Yn)'>
                         , A.LEV2_CUSTOM_CD
                         , A.LEV2_CUSTOM_NM
                         , COUNT(B.VOC_ACT_TYPE_CD2) AS NOW_ALL_CNT
                         , COUNT(C.VOC_ACT_TYPE_CD2) AS BF_ALL_CNT
                         </if>
                         , CASE WHEN B.VOC_CASE_CD = '01' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_01_CNT
                         , CASE WHEN C.VOC_CASE_CD = '01' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_01_CNT
                         , CASE WHEN B.VOC_CASE_CD = '02' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_02_CNT
                         , CASE WHEN C.VOC_CASE_CD = '02' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_02_CNT
                         , CASE WHEN B.VOC_CASE_CD = '03' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_03_CNT
                         , CASE WHEN C.VOC_CASE_CD = '03' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_03_CNT
                         , CASE WHEN B.VOC_CASE_CD = '04' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_04_CNT
                         , CASE WHEN C.VOC_CASE_CD = '04' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_04_CNT
                      FROM (
                            SELECT LEV1.CUSTOM_CD AS "LEV1_CUSTOM_CD"
                                 , LEV1.CUSTOM_NM AS "LEV1_CUSTOM_NM"
                                 <if test='"Y".equals(vocActTypeCd2Yn)'>   
                                 , LEV2.CUSTOM_CD AS "LEV2_CUSTOM_CD"
                                 , LEV2.CUSTOM_NM AS "LEV2_CUSTOM_NM"
                                 </if>
                              FROM (
                                    SELECT A.CUSTOM_CD 
                                         , A.CUSTOM_NM
                                         , A.CUSTOM_LEVEL
                                         , A.UPPER_CUSTOM_CD 
                                         , A.DISP_ORDER
                                      FROM TB_COMPANY_CUSTOM_CODE A
                                           INNER JOIN TB_COMPANY B
                                                   ON A.COMPANY_SEQ = B.COMPANY_SEQ
                                                  AND B.COMPANY_CD = #{companyCd}
                                     WHERE 1=1
                                       AND A.USE_YN = 'Y'
                                       AND A.CUSTOM_TYPE = 'VOC_ACT_TYPE'
                                       AND A.CUSTOM_LEVEL = 1
                                    ) LEV1
                                    <if test='"Y".equals(vocActTypeCd2Yn)'>    
                                    LEFT OUTER JOIN (
                                                        SELECT A.CUSTOM_CD 
                                                             , A.CUSTOM_NM
                                                             , A.CUSTOM_LEVEL
                                                             , A.UPPER_CUSTOM_CD 
                                                             , A.DISP_ORDER
                                                          FROM TB_COMPANY_CUSTOM_CODE A
                                                               INNER JOIN TB_COMPANY B
                                                                       ON A.COMPANY_SEQ = B.COMPANY_SEQ
                                                                      AND B.COMPANY_CD = #{companyCd}
                                                         WHERE 1=1
                                                           AND A.USE_YN = 'Y'
                                                           AND A.CUSTOM_TYPE = 'VOC_ACT_TYPE'
                                                           AND A.CUSTOM_LEVEL = 2
                                                     ) LEV2
                                                 ON LEV1.CUSTOM_CD = LEV2.UPPER_CUSTOM_CD
                                    </if>
                            WHERE 1=1
                            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd1)">
                                AND LEV1.CUSTOM_CD = #{vocActTypeCd1} 
                            </if>
                            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd2)">
                                AND LEV2.CUSTOM_CD = #{vocActTypeCd2} 
                            </if>

                            
                            ORDER BY LEV1.DISP_ORDER ASC
                                    <if test='"Y".equals(vocActTypeCd2Yn)'>    
                                   , LEV2.DISP_ORDER ASC
                                   </if>
                            ) A 
                            LEFT OUTER JOIN TB_VOC_MST B
                                         ON A.LEV1_CUSTOM_CD = B.VOC_ACT_TYPE_CD1
                                    <if test='"Y".equals(vocActTypeCd2Yn)'>                                             
                                        AND A.LEV2_CUSTOM_CD = B.VOC_ACT_TYPE_CD2
                                    </if>
                                        AND B.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
                                        AND B.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
                                        AND B.COMPANY_CD = #{companyCd}
                                        AND B.DEL_YN = 'N'
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
                                            AND B.RCPT_CHNN_CD = #{rcptChnnCd}
                                        </if>
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">
                                            AND B.VOC_TYPE_CD1 = #{vocTypeCd1}
                                        </if>
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">
                                            AND B.VOC_TYPE_CD2 = #{vocTypeCd2}
                                        </if>
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">
                                            AND B.VOC_TYPE_CD3 = #{vocTypeCd3}
                                        </if>
                            LEFT OUTER JOIN TB_VOC_MST C
                                         ON A.LEV1_CUSTOM_CD = C.VOC_ACT_TYPE_CD1
                                        <if test='"Y".equals(vocActTypeCd2Yn)'>     
                                            AND A.LEV2_CUSTOM_CD = C.VOC_ACT_TYPE_CD2
                                        </if>    
                                        AND C.REG_DT <![CDATA[ > ]]> ADDDATE(date_add(#{regDtStart}, interval -1 YEAR), -1)
                                        AND C.REG_DT <![CDATA[ < ]]> ADDDATE(date_add(#{regDtEnd}, interval -1 YEAR), 1)
                                        AND C.COMPANY_CD = #{companyCd}
                                        AND C.DEL_YN = 'N'
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
                                            AND C.RCPT_CHNN_CD = #{rcptChnnCd}
                                        </if>            
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">
                                            AND C.VOC_TYPE_CD1 = #{vocTypeCd1}
                                        </if>
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">
                                            AND C.VOC_TYPE_CD2 = #{vocTypeCd2}
                                        </if>
                                        <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">
                                            AND C.VOC_TYPE_CD3 = #{vocTypeCd3}
                                        </if>                                        
                        GROUP BY A.LEV1_CUSTOM_CD
                               , A.LEV1_CUSTOM_NM
                             <if test='"Y".equals(vocActTypeCd2Yn)'>       
                               , A.LEV2_CUSTOM_CD
                               , A.LEV2_CUSTOM_NM
                             </if>  
                    ) A
    </select>

    <!-- 처리기간별 VOC 현황 조회 -->
    <select id="getVocStatusByActperiod" resultType="kr.co.kmac.statistics.dto.StatisticsDto$Info">
            SELECT A.LEV1_CUSTOM_CD     AS "periodType"
                 , A.LEV1_CUSTOM_NM     AS "actPeriod"
                 , A.NOW_ALL_CNT   AS "totalCnt"
                 , CASE WHEN A.BF_ALL_CNT > 0
                        THEN ( ( A.NOW_ALL_CNT - A.BF_ALL_CNT ) / A.BF_ALL_CNT ) * 100
                        WHEN A.NOW_ALL_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "totalYoyCnt"
                   <!-- 불만 -->  
                 , A.NOW_01_CNT AS "complaintCnt"
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_01_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "complaintRate"
                 , CASE WHEN BF_01_CNT > 0
                        THEN ( ( NOW_01_CNT - BF_01_CNT ) / BF_01_CNT ) * 100
                        WHEN NOW_01_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "complaintYoyCnt" 
                   <!-- 칭찬 -->
                 , A.NOW_02_CNT AS "complimentCnt"
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_02_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "complimentRate"
                 , CASE WHEN BF_02_CNT > 0
                        THEN ( ( NOW_02_CNT - BF_02_CNT ) / BF_02_CNT ) * 100
                        WHEN NOW_02_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "complimentYoyCnt"       
                   <!-- 제안 -->                
                 , A.NOW_03_CNT AS "suggestionCnt"   
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_03_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "suggestionRate"
                 , CASE WHEN BF_03_CNT > 0
                        THEN ( ( NOW_03_CNT - BF_03_CNT ) / BF_03_CNT ) * 100
                        WHEN NOW_03_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "suggestionYoyCnt"       
                   <!-- 문의 -->
                 , A.NOW_04_CNT AS "inquiryCnt"  
                 , CASE WHEN NOW_ALL_CNT > 0
                        THEN (NOW_04_CNT/NOW_ALL_CNT) * 100 
                        ELSE 0
                   END AS "inquiryRate"
                 , CASE WHEN BF_04_CNT > 0
                        THEN ( ( NOW_04_CNT - BF_04_CNT ) / BF_04_CNT ) * 100
                        WHEN NOW_04_CNT > 0
                        THEN 100
                        ELSE 0
                   END AS "inquiryYoyCnt"          
              FROM (
                    SELECT A.LEV1_CUSTOM_CD
                         , A.LEV1_CUSTOM_NM
                         , COUNT(B.CNT) AS NOW_ALL_CNT
                         , COUNT(C.CNT) AS BF_ALL_CNT       
                         , CASE WHEN B.VOC_CASE_CD = '01' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_01_CNT
                         , CASE WHEN C.VOC_CASE_CD = '01' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_01_CNT
                         , CASE WHEN B.VOC_CASE_CD = '02' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_02_CNT
                         , CASE WHEN C.VOC_CASE_CD = '02' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_02_CNT
                         , CASE WHEN B.VOC_CASE_CD = '03' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_03_CNT
                         , CASE WHEN C.VOC_CASE_CD = '03' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_03_CNT
                         , CASE WHEN B.VOC_CASE_CD = '04' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS NOW_04_CNT
                         , CASE WHEN C.VOC_CASE_CD = '04' 
                                THEN SUM(1) 
                                ELSE 0 
                           END AS BF_04_CNT
                      FROM (
                            SELECT LEV1.PROC_ST_DAY AS "LEV1_CUSTOM_CD"
                                 , LEV1.PROC_DAY_NM AS "LEV1_CUSTOM_NM"
                                 , LEV1.PROC_ST_DAY
                                 , LEV1.PROC_ED_DAY
                              FROM (
                                    SELECT 1 AS PROC_ST_DAY, 2 AS PROC_ED_DAY, '1일 이내' AS PROC_DAY_NM UNION ALL
                                    SELECT 2 AS PROC_ST_DAY, 4 AS PROC_ED_DAY, '2일 ~ 3일' AS PROC_DAY_NM UNION ALL
                                    SELECT 4 AS PROC_ST_DAY, 8 AS PROC_ED_DAY, '4일 ~ 7일' AS PROC_DAY_NM UNION ALL
                                    SELECT 8 AS PROC_ST_DAY, 15 AS PROC_ED_DAY, '8일 ~ 15일' AS PROC_DAY_NM UNION ALL
                                    SELECT 16 AS PROC_ST_DAY, 30 AS PROC_ED_DAY, '16일 ~ 30일' AS PROC_DAY_NM UNION ALL 
                                    SELECT 31 AS PROC_ST_DAY, 999 AS PROC_ED_DAY, '31일 이상' AS PROC_DAY_NM 
                                    ) LEV1
                            WHERE 1=1
                            ORDER BY LEV1.PROC_ST_DAY ASC
                            ) A 
                            LEFT OUTER JOIN (
                                                SELECT DATEDIFF(VOC_ACT_DT, REG_DT) AS ACT_DD
                                                     , VOC_CASE_CD 
                                                     , 1 AS CNT
                                                  FROM TB_VOC_MST
                                                 WHERE 1=1
                                                   AND DEL_YN = 'N'  
                                                   AND VOC_ACT_DT IS NOT NULL       /* 처리시간이 있는것 */
                                                   AND VOC_STATUS_CD = 'C0'         /* C0:처리완료 */
                                                   AND COMPANY_CD = #{companyCd}
                                                   AND REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
                                                   AND REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
                                                    AND RCPT_CHNN_CD = #{rcptChnnCd}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">
                                                    AND VOC_TYPE_CD1 = #{vocTypeCd1}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">
                                                    AND VOC_TYPE_CD2 = #{vocTypeCd2}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">
                                                    AND VOC_TYPE_CD3 = #{vocTypeCd3}
                                                </if>               
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd1)">
					                                AND VOC_ACT_TYPE_CD1 = #{vocActTypeCd1} 
					                            </if>
					                            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd2)">
					                                AND VOC_ACT_TYPE_CD2 = #{vocActTypeCd2} 
					                            </if>
                                            ) B
										   ON B.ACT_DD <![CDATA[ >= ]]>  A.PROC_ST_DAY
                                          AND B.ACT_DD <![CDATA[ < ]]> A.PROC_ED_DAY
                                          
                            LEFT OUTER JOIN (
                                                SELECT DATEDIFF(VOC_ACT_DT, REG_DT) AS ACT_DD
                                                     , VOC_CASE_CD
                                                     , 1 AS CNT
                                                  FROM TB_VOC_MST
                                                 WHERE 1=1
                                                   AND DEL_YN = 'N'  
                                                   AND VOC_ACT_DT IS NOT NULL       /* 처리시간이 있는것 */
                                                   AND VOC_STATUS_CD = 'C0'         /* C0:처리완료 */
                                                   AND COMPANY_CD = #{companyCd}
                                                   AND REG_DT <![CDATA[ > ]]> ADDDATE(date_add(#{regDtStart}, interval -1 YEAR), -1)
                                                   AND REG_DT <![CDATA[ < ]]> ADDDATE(date_add(#{regDtEnd}, interval -1 YEAR), 1)
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">
                                                    AND RCPT_CHNN_CD = #{rcptChnnCd}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">
                                                    AND VOC_TYPE_CD1 = #{vocTypeCd1}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">
                                                    AND VOC_TYPE_CD2 = #{vocTypeCd2}
                                                </if>
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">
                                                    AND VOC_TYPE_CD3 = #{vocTypeCd3}
                                                </if>                     
                                                <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd1)">
					                                AND VOC_ACT_TYPE_CD1 = #{vocActTypeCd1} 
					                            </if>
					                            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd2)">
					                                AND VOC_ACT_TYPE_CD2 = #{vocActTypeCd2} 
					                            </if>
                                            ) C
										   ON C.ACT_DD <![CDATA[ >= ]]> A.PROC_ST_DAY
                                          AND C.ACT_DD <![CDATA[ < ]]> A.PROC_ED_DAY
                        GROUP BY A.LEV1_CUSTOM_CD
                               , A.LEV1_CUSTOM_NM
                    ) A
    </select>

</mapper>

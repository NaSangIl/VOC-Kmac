<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kmac.voc.mapper.VocMstMapper">


    <!-- VOC마스터 목록 조회 -->
    <select id="getVocMstList" resultType="kr.co.kmac.voc.dto.VocMstDto$Info">
        SELECT  A.voc_seq              AS "vocSeq",
                A.company_cd           AS "companyCd",
                A.voc_id               AS "vocId",
                A.cust_seq             AS "custSeq",
                A.voc_case_cd          AS "vocCaseCd",
                fn_getCodeNm('VOC_CASE_CD', A.voc_case_cd) AS "vocCaseNm",

                A.voc_type_cd1         AS "vocTypeCd1",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd1) AS "vocTypeNm1",
                A.voc_type_cd2         AS "vocTypeCd2",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd2) AS "vocTypeNm2",
                A.voc_type_cd3         AS "vocTypeCd3",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd3) AS "vocTypeNm3",

                A.rcpt_chnn_cd         AS "rcptChnnCd",
                fn_getCodeNm('RCPT_CHNN_CD', A.rcpt_chnn_cd) AS "rcptChnnNm",
                A.source_cd            AS "sourceCd",
                fn_getCodeNm('SOURCE_CD', A.source_cd) AS "sourceNm",
                date_format(A.source_dt, '%Y-%m-%d %H:%i') AS "sourceDt",
                A.cust_reply_yn        AS "custReplyYn",
                A.cust_reply_cd        AS "custReplyCd",
                fn_getCodeNm('CUST_REPLY_CD', A.cust_reply_cd) AS "custReplyNm",
                A.voc_title            AS "vocTitle",
                A.voc_cont             AS "vocCont",
                A.imme_act_yn          AS "immeActYn",
                A.voc_act_type_cd1     AS "vocActTypeCd1",
                fn_getCustomCodeNm(A.company_cd, 'VOC_ACT_TYPE', A.voc_act_type_cd1) AS "vocActTypeNm1",

                A.voc_act_type_cd2     AS "vocActTypeCd2",
                fn_getCustomCodeNm(A.company_cd, 'VOC_ACT_TYPE', A.voc_act_type_cd2) AS "vocActTypeNm2",

                date_format(A.voc_act_dt, '%Y-%m-%d %H:%i:%s') AS "vocActDt",
                A.voc_act_user_no      AS "vocActUserNo",
                fn_getUserNm(A.voc_act_user_no) AS "vocActUserNm",
                A.voc_act_cont         AS "vocActCont",
                A.voc_status_cd        AS "vocStatusCd",
                fn_getCodeNm('VOC_STATUS_CD', A.voc_status_cd) AS "vocStatusNm",
                A.anonym_cust_yn       AS "anonymCustYn",
                A.sens_spec_yn         AS "sensSpecYn",
                A.del_yn               AS "delYn",
                A.reg_user_no          AS "regUserNo",
                fn_getUserNm(A.reg_user_no) AS "regUserNm",
                date_format(A.reg_dt, '%Y-%m-%d %H:%i:%s') AS "regDt",
                A.mod_user_no          AS "modUserNo",
                fn_getUserNm(A.mod_user_no) AS "modUserNm",
                date_format(A.mod_dt, '%Y-%m-%d %H:%i:%s') AS "modDt",
                B.cust_nm              AS "custNm"
           FROM TB_VOC_MST A
           LEFT OUTER JOIN TB_VOC_CUST B
             ON A.CUST_SEQ = B.CUST_SEQ
          	<choose>
          		<when test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(custSeq) and custSeq!=0">
          			WHERE A.cust_seq = #{custSeq}
          		</when>
          		<otherwise>
					WHERE A.company_cd = #{companyCd}
          		</otherwise>
          	</choose>
            <if test="@org.apache.commons.lang3.ObjectUtils@isEmpty(delYn)">AND A.del_yn = 'N' </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocId)">AND A.voc_id = #{vocId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(custNm)">AND B.cust_nm LIKE CONCAT('%',#{custNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocCaseCd)">AND A.voc_case_cd = #{vocCaseCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">AND A.voc_type_cd1 = #{vocTypeCd1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">AND A.voc_type_cd2 = #{vocTypeCd2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">AND A.voc_type_cd3 = #{vocTypeCd3} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">AND A.rcpt_chnn_cd = #{rcptChnnCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sourceCd)">AND A.source_cd = #{sourceCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regUserNm)">AND fn_getUserNm(A.reg_user_no) LIKE CONCAT('%',#{regUserNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTitle)">AND A.voc_title LIKE CONCAT('%',#{vocTitle},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd1)">AND A.voc_act_type_cd1 = #{vocActTypeCd1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd2)">AND A.voc_act_type_cd2 = #{vocActTypeCd2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActUserNm)">AND fn_getUserNm(A.voc_act_user_no) LIKE CONCAT('%',#{vocActUserNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocStatusCd)">AND A.voc_status_cd = #{vocStatusCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= #{regDtStart} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActDtStart)">AND A.voc_act_dt &gt;= #{vocActDtStart} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActDtEnd)">AND A.voc_act_dt &lt; ADDDATE(#{vocActDtEnd},1) </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sensSpecYn)">AND A.sens_spec_yn = #{sensSpecYn} </if>

        ORDER BY A.voc_seq DESC
         <if test="offset &gt; -1">
         LIMIT #{offset}, #{length}
         </if>
    </select>
    <select id="getVocMstListCount" resultType="long">
        SELECT COUNT(1)
          FROM tb_voc_mst A left outer join tb_voc_cust B on A.cust_seq = B.cust_seq
         	<choose>
          		<when test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(custSeq) and custSeq!=0">
          			WHERE A.cust_seq = #{custSeq}
          		</when>
          		<otherwise>
					WHERE A.company_cd = #{companyCd}
          		</otherwise>
          	</choose>
            <if test="@org.apache.commons.lang3.ObjectUtils@isEmpty(delYn)">AND A.del_yn = 'N' </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocId)">AND A.voc_id = #{vocId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(custNm)">AND B.cust_nm LIKE CONCAT('%',#{custNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocCaseCd)">AND A.voc_case_cd = #{vocCaseCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd1)">AND A.voc_type_cd1 = #{vocTypeCd1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd2)">AND A.voc_type_cd2 = #{vocTypeCd2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTypeCd3)">AND A.voc_type_cd3 = #{vocTypeCd3} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(rcptChnnCd)">AND A.rcpt_chnn_cd = #{rcptChnnCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sourceCd)">AND A.source_cd = #{sourceCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regUserNm)">AND fn_getUserNm(A.reg_user_no) LIKE CONCAT('%',#{regUserNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocTitle)">AND A.voc_title LIKE CONCAT('%',#{vocTitle},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd1)">AND A.voc_act_type_cd1 = #{vocActTypeCd1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActTypeCd2)">AND A.voc_act_type_cd2 = #{vocActTypeCd2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActUserNm)">AND fn_getUserNm(A.voc_act_user_no) LIKE CONCAT('%',#{vocActUserNm},'%') </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocStatusCd)">AND A.voc_status_cd = #{vocStatusCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= #{regDtStart} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActDtStart)">AND A.voc_act_dt &gt;= #{vocActDtStart} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocActDtEnd)">AND A.voc_act_dt &lt; ADDDATE(#{vocActDtEnd},1) </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(sensSpecYn)">AND A.sens_spec_yn = #{sensSpecYn} </if>
    </select>

	<!-- VOC마스터 상세 조회 -->
    <select id="getVocMst" resultType="kr.co.kmac.voc.dto.VocMstDto$Info">
        SELECT  A.voc_seq              AS "vocSeq",
                A.company_cd           AS "companyCd",
                A.voc_id               AS "vocId",
                A.cust_seq             AS "custSeq",
                A.voc_case_cd          AS "vocCaseCd",
                fn_getCodeNm('VOC_CASE_CD', A.voc_case_cd) AS "vocCaseNm",
                A.voc_type_cd1         AS "vocTypeCd1",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd1) AS "vocTypeNm1",
                A.voc_type_cd2         AS "vocTypeCd2",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd2) AS "vocTypeNm2",
                A.voc_type_cd3         AS "vocTypeCd3",
                fn_getCustomCodeNm(A.company_cd, 'VOC_TYPE', A.voc_type_cd3) AS "vocTypeNm3",
                A.rcpt_chnn_cd         AS "rcptChnnCd",
                fn_getCodeNm('RCPT_CHNN_CD', A.rcpt_chnn_cd) AS "rcptChnnNm",
                A.source_cd            AS "sourceCd",
                fn_getCodeNm('SOURCE_CD', A.source_cd) AS "sourceNm",
                date_format(A.source_dt, '%Y-%m-%d %H:%i') AS "sourceDt",
                A.cust_reply_yn        AS "custReplyYn",
                A.cust_reply_cd        AS "custReplyCd",
                fn_getCodeNm('CUST_REPLY_CD', A.cust_reply_cd) AS "custReplyNm",
                A.voc_title            AS "vocTitle",
                A.voc_cont             AS "vocCont",
                A.imme_act_yn          AS "immeActYn",
                A.voc_act_type_cd1     AS "vocActTypeCd1",
                fn_getCustomCodeNm(A.company_cd, 'VOC_ACT_TYPE', A.voc_act_type_cd1) AS "vocActTypeNm1",
                A.voc_act_type_cd2     AS "vocActTypeCd2",
                fn_getCustomCodeNm(A.company_cd, 'VOC_ACT_TYPE', A.voc_act_type_cd2) AS "vocActTypeNm2",
                date_format(A.voc_act_dt, '%Y-%m-%d %H:%i:%s') AS "vocActDt",
                A.voc_act_user_no      AS "vocActUserNo",
                fn_getUserNm(A.voc_act_user_no) AS "vocActUserNm",
                A.voc_act_cont         AS "vocActCont",
                A.voc_status_cd        AS "vocStatusCd",
                fn_getCodeNm('VOC_STATUS_CD', A.voc_status_cd) AS "vocStatusNm",
                A.anonym_cust_yn       AS "anonymCustYn",
                A.sens_spec_yn         AS "sensSpecYn",
                A.del_yn               AS "delYn",
                A.reg_user_no          AS "regUserNo",
                fn_getUserNm(A.reg_user_no) AS "regUserNm",
                date_format(A.reg_dt, '%Y-%m-%d %H:%i:%s') AS "regDt",
                A.mod_user_no          AS "modUserNo",
                fn_getUserNm(A.mod_user_no) AS "modUserNm",
                date_format(A.mod_dt, '%Y-%m-%d %H:%i:%s') AS "modDt"
          FROM tb_voc_mst A
         WHERE A.voc_seq = #{vocSeq}
           AND A.del_yn = 'N'
    </select>

    <!-- VOC마스터 상세 조회 -->
    <select id="getVocStates" resultType="kr.co.kmac.voc.dto.VocMstDto$StatusInfo">
        SELECT IFNULL(SUM(complaintCnt),0) AS "complaintCnt",
               IFNULL(SUM(complimentCnt),0) AS "complimentCnt",
               IFNULL(SUM(suggestionCnt),0) AS "suggestionCnt",
               IFNULL(SUM(inquiryCnt),0) AS "inquiryCnt",
               IFNULL(round(AVG(actPeriod),1),0) AS "actPeriodAvg"
        FROM (
            SELECT CASE A.voc_case_cd WHEN '01' THEN 1 ELSE 0 END AS "complaintCnt",
                   CASE A.voc_case_cd WHEN '02' THEN 1 ELSE 0 END AS "complimentCnt",
                   CASE A.voc_case_cd WHEN '03' THEN 1 ELSE 0 END AS "suggestionCnt",
                   CASE A.voc_case_cd WHEN '04' THEN 1 ELSE 0 END AS "inquiryCnt",
                   CASE WHEN A.VOC_STATUS_CD = 'C0' THEN DATEDIFF(A.VOC_ACT_DT, A.REG_DT) ELSE NULL END AS "actPeriod"
            FROM tb_voc_mst A
            WHERE A.del_yn = 'N'
              AND A.company_cd = #{companyCd}
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtStart)">AND A.reg_dt &gt;= #{regDtStart} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDtEnd)">AND A.reg_dt &lt; ADDDATE(#{regDtEnd},1) </if>
        ) T
    </select>

	<!-- VOC마스터 등록 -->
    <insert id="insertVocMst">
        INSERT INTO tb_voc_mst
        (
            company_cd,
            voc_id,
            cust_seq,
            voc_case_cd,
            voc_type_cd1,
            voc_type_cd2,
            voc_type_cd3,
            rcpt_chnn_cd,
            source_cd,
            source_dt,
            cust_reply_yn,
            cust_reply_cd,
            voc_title,
            voc_cont,
            imme_act_yn,
            voc_act_type_cd1,
            voc_act_type_cd2,
            voc_act_dt,
            voc_act_user_no,
            voc_act_cont,
            voc_status_cd,
            anonym_cust_yn,
            sens_spec_yn,
            reg_user_no,
            mod_user_no
        )
        VALUES
        (
            #{companyCd},
            ( SELECT * FROM (
                SELECT CONCAT(CONCAT(#{companyCd},'_',DATE_FORMAT(NOW(),'%Y%m%d')), '_', LPAD(IFNULL(COUNT(1), 0) + 1, 4, '0'))
                FROM tb_voc_mst
                WHERE company_cd=#{companyCd}
                AND reg_dt &gt;= CURDATE() AND reg_dt &lt; ADDDATE(CURDATE(), 1)
                ) AS voc_id
            ),
            #{custSeq},
            #{vocCaseCd},
            #{vocTypeCd1},
            #{vocTypeCd2},
            #{vocTypeCd3},
            #{rcptChnnCd},
            #{sourceCd},
            #{sourceDt},
            #{custReplyYn},
            #{custReplyCd},
            #{vocTitle},
            #{vocCont},
            #{immeActYn},
            #{vocActTypeCd1},
            #{vocActTypeCd2},
            case #{vocActDt} when '' then null else #{vocActDt} end,
            #{vocActUserNo},
            #{vocActCont},
            #{vocStatusCd},
            #{anonymCustYn},
            #{sensSpecYn},
            #{regUserNo},
            #{modUserNo}
        )
        <selectKey resultType="int" keyProperty="returnKey" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!-- VOC마스터 수정 -->
    <update id="updateVocMst">
        UPDATE tb_voc_mst SET
            cust_seq             = #{custSeq},
            voc_case_cd          = #{vocCaseCd},
            voc_type_cd1         = #{vocTypeCd1},
            voc_type_cd2         = #{vocTypeCd2},
            voc_type_cd3         = #{vocTypeCd3},
            rcpt_chnn_cd         = #{rcptChnnCd},
            source_cd            = #{sourceCd},
            source_dt            = #{sourceDt},
            cust_reply_yn        = #{custReplyYn},
            cust_reply_cd        = #{custReplyCd},
            voc_title            = #{vocTitle},
            voc_cont             = #{vocCont},
            imme_act_yn          = #{immeActYn},
            voc_act_type_cd1     = #{vocActTypeCd1},
            voc_act_type_cd2     = #{vocActTypeCd2},
            voc_act_dt           = case #{vocActDt} when '' then null else #{vocActDt} end,
            voc_act_user_no      = #{vocActUserNo},
            voc_act_cont         = #{vocActCont},
            voc_status_cd        = #{vocStatusCd},
            anonym_cust_yn       = #{anonymCustYn},
            sens_spec_yn         = #{sensSpecYn},
            mod_user_no          = #{modUserNo}
        WHERE voc_seq = #{vocSeq}
    </update>

    <!-- VOC마스터 상태 수정 -->
    <update id="updateVocMstStatus">
        UPDATE tb_voc_mst
        SET voc_status_cd        = #{vocStatusCd},
            mod_user_no          = #{modUserNo}
        WHERE voc_seq = #{vocSeq}
    </update>

    <!-- VOC마스터 삭제 처리 -->
    <update id="deleteVocMst">
        UPDATE tb_voc_mst
        SET del_yn = 'Y',
            mod_user_no          = #{modUserNo}
        WHERE voc_seq = #{vocSeq}
    </update>

	<!-- 메인화면 - 월별 VOC현황 및 추이 조회 -->
    <select id="getVocProgress" resultType="kr.co.kmac.voc.dto.VocMstDto$ProgressInfo">
<!--		
        SELECT A.YM_TP		  AS ymTp	
		     , SUM(A.ALL_CNT) AS allCnt
		     , SUM(A.01_CNT)  AS complaintCnt
		     , SUM(A.02_CNT)  AS complimentCnt
		     , SUM(A.03_CNT)  AS suggestionCnt
		     , SUM(A.04_CNT)  AS inquiryCnt
		     , IFNULL(( SELECT SUM(1)
		           FROM TB_VOC_MST 
		          WHERE REG_DT <![CDATA[ > ]]> ADDDATE(CONCAT(A.YM_TP,'-01'), -1) 
		            AND REG_DT <![CDATA[ < ]]> ADDDATE(LAST_DAY(CONCAT(A.YM_TP,'-01')), 1)
		            AND COMPANY_CD  = #{companyCd}
		            AND DEL_YN  = 'N'
		            AND SENS_SPEC_YN = 'Y'
		       ),0) sensSpecCnt
		  FROM (
				SELECT DATE_FORMAT(A.reg_dt, '%Y.%m') AS "YM_TP"
				     , VOC_CASE_CD
				     , 1 AS ALL_CNT
				     , CASE WHEN VOC_CASE_CD  = '01'
				            THEN 1
				            ELSE 0
				       END "01_CNT"
				     , CASE WHEN VOC_CASE_CD  = '02'
				            THEN 1
				            ELSE 0
				       END "02_CNT"  
				     , CASE WHEN VOC_CASE_CD  = '03'
				            THEN 1
				            ELSE 0
				       END "03_CNT"
				       
				     , CASE WHEN VOC_CASE_CD  = '04'
				            THEN 1
				            ELSE 0
				       END "04_CNT"
				 FROM TB_VOC_MST A
				WHERE 1=1
				  AND A.COMPANY_CD = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
			) A
		GROUP BY A.YM_TP
		ORDER BY A.YM_TP ASC
-->

		WITH RECURSIVE T AS (
		    SELECT #{regDtStart} AS DD
		    UNION ALL
		    SELECT ADDDATE(DD, 1)
		      FROM T 
		     WHERE DD <![CDATA[ < ]]> #{regDtEnd}
		)
		SELECT T.YM_TP        AS ymTp   
		     , IFNULL(SUM(A.ALL_CNT),0) AS allCnt
		     , IFNULL(SUM(A.01_CNT),0)  AS complaintCnt
		     , IFNULL(SUM(A.02_CNT),0)  AS complimentCnt
		     , IFNULL(SUM(A.03_CNT),0)  AS suggestionCnt
		     , IFNULL(SUM(A.04_CNT),0)  AS inquiryCnt
		     , IFNULL(( SELECT SUM(1)
		           FROM TB_VOC_MST 
		          WHERE REG_DT  <![CDATA[ > ]]>  ADDDATE(CONCAT(T.YM_TP,'-01'), -1) 
		            AND REG_DT  <![CDATA[ < ]]>  ADDDATE(LAST_DAY(CONCAT(T.YM_TP,'-01')), 1)
		            AND COMPANY_CD  = #{companyCd}
		            AND DEL_YN  = 'N'
		            AND SENS_SPEC_YN = 'Y'
		       ),0) sensSpecCnt
		  FROM (
		        SELECT DISTINCT DATE_FORMAT(T.DD, '%Y.%m') YM_TP 
		          FROM T
		        ) T
		        LEFT OUTER JOIN (
		                            SELECT DATE_FORMAT(A.reg_dt, '%Y.%m') AS "YM_TP"
		                                 , VOC_CASE_CD
		                                 , 1 AS ALL_CNT
		                                 , CASE WHEN VOC_CASE_CD  = '01'
		                                        THEN 1
		                                        ELSE 0
		                                   END "01_CNT"
		                                 , CASE WHEN VOC_CASE_CD  = '02'
		                                        THEN 1
		                                        ELSE 0
		                                   END "02_CNT"  
		                                 , CASE WHEN VOC_CASE_CD  = '03'
		                                        THEN 1
		                                        ELSE 0
		                                   END "03_CNT"
		                                 , CASE WHEN VOC_CASE_CD  = '04'
		                                        THEN 1
		                                        ELSE 0
		                                   END "04_CNT"
		                             FROM TB_VOC_MST A
		                            WHERE 1=1
		                             AND A.COMPANY_CD = #{companyCd} 
								     AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
									 AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
		                             AND A.DEL_YN  = 'N'
		                         ) A
		                        ON T.YM_TP = A.YM_TP
		GROUP BY T.YM_TP
		ORDER BY T.YM_TP ASC		
    </select>
    
	<!-- 메인화면 - VOC 처리현황 조회 -->
    <select id="getVocActProgress" resultType="kr.co.kmac.voc.dto.VocMstDto$ActProgressInfo">
		
		SELECT IFNULL(SUM(allCnt),0) AS allCnt
		     , IFNULL(round(AVG(actTime),1),0) AS actTime
		     , IFNULL(SUM(nonActCnt),0) AS nonActCnt
		     , IFNULL(SUM(actCnt),0) AS actCnt
		     , CASE WHEN IFNULL(SUM(allCnt),0) > 0
		            THEN ROUND((SUM(actCnt)/SUM(allCnt)),1) * 100
		            ELSE 0
		       END actRate     
		  FROM (        
		            SELECT allCnt
		                 , actTime
		                 , actCnt
		                 , CASE WHEN nonActTime <![CDATA[ >= ]]> 5
		                        THEN 1
		                        ELSE NULL
		                   END nonActCnt     
		              FROM (
		                    SELECT 1 AS "allCnt"  
		                         , CASE WHEN A.VOC_STATUS_CD = 'C0' 
		                                THEN DATEDIFF(A.VOC_ACT_DT, A.REG_DT) 
		                                ELSE NULL 
		                           END AS "actTime"
		                         , CASE WHEN A.VOC_STATUS_CD = 'C0' 
		                                THEN 1
		                                ELSE NULL 
		                           END AS "actCnt"  
		                         , CASE WHEN A.VOC_STATUS_CD != 'C0' 
		                                THEN DATEDIFF(A.VOC_ACT_DT, A.REG_DT) 
		                                ELSE NULL 
		                           END AS "nonActTime"
							 FROM TB_VOC_MST A
							WHERE 1=1
							  AND A.company_cd = #{companyCd}
							  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
							  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
							  AND A.DEL_YN  = 'N'
			              ) A
                ) A
    </select>
    
	<!-- 메인화면 - VOC유형별 접수현황 조회 -->
    <select id="getVocTypeStates1Lev" resultType="kr.co.kmac.voc.dto.VocMstDto$VocTypeStatusInfo">
		
		   SELECT A.VOC_TYPE_CD1	AS vocTypeCd1
		        , B.CUSTOM_NM 		AS vocTypeNm1
		        , SUM(1) 			AS receiptCnt
		     FROM TB_VOC_MST A
		          INNER JOIN (
		                         SELECT CD1.CUSTOM_CD
		                              , CD1.CUSTOM_NM
		                           FROM TB_COMPANY_CUSTOM_CODE CD1
		                                INNER JOIN TB_COMPANY CD2
		                                        ON CD1.COMPANY_SEQ = CD2.COMPANY_SEQ
		                                       AND CD2.COMPANY_CD = #{companyCd}
		                          WHERE CD1.CUSTOM_TYPE = 'VOC_TYPE'
		                            AND CD1.USE_YN = 'Y'
		                      ) B
		                   ON A.VOC_TYPE_CD1 = B.CUSTOM_CD
				WHERE 1=1
				  AND A.company_cd = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
				GROUP BY A.VOC_TYPE_CD1
                       , B.CUSTOM_NM
                ORDER BY SUM(1) DESC       
    </select>
    
	<!-- 메인화면 - VOC유형별 접수현황 조회 -->
    <select id="getVocTypeStates2Lev" resultType="kr.co.kmac.voc.dto.VocMstDto$VocTypeStatusInfo">
		
		   SELECT A.VOC_TYPE_CD2	AS vocTypeCd2
		        , B.CUSTOM_NM 		AS vocTypeNm2
		        , SUM(1) 			AS receiptCnt
		     FROM TB_VOC_MST A
		          INNER JOIN (
		                         SELECT CD1.CUSTOM_CD
		                              , CD1.CUSTOM_NM
		                           FROM TB_COMPANY_CUSTOM_CODE CD1
		                                INNER JOIN TB_COMPANY CD2
		                                        ON CD1.COMPANY_SEQ = CD2.COMPANY_SEQ
		                                       AND CD2.COMPANY_CD = #{companyCd}
		                          WHERE CD1.CUSTOM_TYPE = 'VOC_TYPE'
		                            AND CD1.USE_YN = 'Y'
		                      ) B
		                   ON A.VOC_TYPE_CD2 = B.CUSTOM_CD
				WHERE 1=1
				  AND A.VOC_TYPE_CD1 = #{vocTypeCd1}
				  AND A.company_cd = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
				GROUP BY A.VOC_TYPE_CD2
                       , B.CUSTOM_NM
                ORDER BY SUM(1) DESC       
    </select>
    
	<!-- 메인화면 - VOC유형별 접수현황 조회 -->
    <select id="getVocTypeStates3Lev" resultType="kr.co.kmac.voc.dto.VocMstDto$VocTypeStatusInfo">
		
		   SELECT A.VOC_TYPE_CD3	AS vocTypeCd3
		        , B.CUSTOM_NM 		AS vocTypeNm3
		        , SUM(1) 			AS receiptCnt
		     FROM TB_VOC_MST A
		          INNER JOIN (
		                         SELECT CD1.CUSTOM_CD
		                              , CD1.CUSTOM_NM
		                           FROM TB_COMPANY_CUSTOM_CODE CD1
		                                INNER JOIN TB_COMPANY CD2
		                                        ON CD1.COMPANY_SEQ = CD2.COMPANY_SEQ
		                                       AND CD2.COMPANY_CD = #{companyCd}
		                          WHERE CD1.CUSTOM_TYPE = 'VOC_TYPE'
		                            AND CD1.USE_YN = 'Y'
		                      ) B
		                   ON A.VOC_TYPE_CD3 = B.CUSTOM_CD
				WHERE 1=1
				  AND A.VOC_TYPE_CD2 = #{vocTypeCd2}
				  AND A.COMPANY_CD = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
				GROUP BY A.VOC_TYPE_CD3
                       , B.CUSTOM_NM
                ORDER BY SUM(1) DESC       
    </select>
    
            	<!-- 메인화면 - VOC처리유형별 접수현황 조회 -->
    <select id="getVocActTypeStates1Lev" resultType="kr.co.kmac.voc.dto.VocMstDto$VocActTypeStatusInfo">
		
		   SELECT A.VOC_ACT_TYPE_CD1	AS vocActTypeCd1
		        , B.CUSTOM_NM 			AS vocActTypeNm1
		        , SUM(1) 				AS receiptCnt
		     FROM TB_VOC_MST A
		          INNER JOIN (
		                         SELECT CD1.CUSTOM_CD
		                              , CD1.CUSTOM_NM
		                           FROM TB_COMPANY_CUSTOM_CODE CD1
		                                INNER JOIN TB_COMPANY CD2
		                                        ON CD1.COMPANY_SEQ = CD2.COMPANY_SEQ
		                                       AND CD2.COMPANY_CD = #{companyCd}
		                          WHERE CD1.CUSTOM_TYPE = 'VOC_ACT_TYPE'
		                            AND CD1.USE_YN = 'Y'
		                      ) B
		                   ON A.VOC_ACT_TYPE_CD1 = B.CUSTOM_CD
				WHERE 1=1
				  AND A.company_cd = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
				GROUP BY A.VOC_ACT_TYPE_CD1
                       , B.CUSTOM_NM
                ORDER BY SUM(1) DESC       
    </select>
    
	<!-- 메인화면 - VOC유형별 접수현황 조회 -->
    <select id="getVocActTypeStates2Lev" resultType="kr.co.kmac.voc.dto.VocMstDto$VocActTypeStatusInfo">
		
		   SELECT A.VOC_ACT_TYPE_CD2	AS vocActTypeCd2
		        , B.CUSTOM_NM 			AS vocActTypeNm2
		        , SUM(1) 				AS receiptCnt
		     FROM TB_VOC_MST A
		          INNER JOIN (
		                         SELECT CD1.CUSTOM_CD
		                              , CD1.CUSTOM_NM
		                           FROM TB_COMPANY_CUSTOM_CODE CD1
		                                INNER JOIN TB_COMPANY CD2
		                                        ON CD1.COMPANY_SEQ = CD2.COMPANY_SEQ
		                                       AND CD2.COMPANY_CD = #{companyCd}
		                          WHERE CD1.CUSTOM_TYPE = 'VOC_ACT_TYPE'
		                            AND CD1.USE_YN = 'Y'
		                      ) B
		                   ON A.VOC_ACT_TYPE_CD2 = B.CUSTOM_CD
				WHERE 1=1
				  AND A.VOC_ACT_TYPE_CD1 = #{vocActTypeCd1}
				  AND A.company_cd = #{companyCd}
				  AND A.REG_DT <![CDATA[ > ]]> ADDDATE(#{regDtStart}, -1)
				  AND A.REG_DT <![CDATA[ < ]]> ADDDATE(#{regDtEnd}, 1)
				  AND A.DEL_YN  = 'N'
				GROUP BY A.VOC_ACT_TYPE_CD2
                       , B.CUSTOM_NM
                ORDER BY SUM(1) DESC       
    </select>
    
    	<!-- 메인화면 - VOC유형별 접수현황 조회 -->
    <select id="getMainNoticeList" resultType="kr.co.kmac.bbs.dto.BbsDto$MainNoticeListInfo">
		SELECT A.BBS_SEQ       AS bbsSeq		
		     , A.BBS_TYPE_CD   AS bbsTypeCd
		     , A.COMPANY_CD    AS companyCd
		     , A.TITLE         AS title
		     , A.REG_USER_NO   AS regUserNo
		     , FN_GETUSERNM(A.REG_USER_NO) AS "regUserNm"
		     , DATE_FORMAT(A.REG_DT, '%Y-%m-%d %H:%i:%s') AS "regDt"
		  FROM TB_BBS A
		 WHERE A.COMPANY_CD = #{companyCd}
		   AND A.BBS_TYPE_CD = 'NOTICE'
		   AND A.USE_YN = 'Y'
		ORDER BY A.REG_DT DESC
		LIMIT 5
    </select>
    
    
</mapper>
